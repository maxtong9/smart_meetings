<% if @json_from_file != 0 %>
  <% hash = JSON.parse(@json_from_file, object_class: OpenStruct) %>
<% end %>

<p id="notice"><%= notice %></p>
<% if @json_from_file != 0 %>
  <body class="body">
  <div class="container-fluid">
    <div class="row" style="margin: 0 0 0 20px">
      <div class="col-2.5 col-md-2.5">
        <div class="card border-left-primary shadow h-50">
          <div class="card-body">
            <div class="border-bottom">
              <h1> <%= @meeting.name %></h1>
              <h3>Participants:</h3>
                  <ul>
                    <% if !@meeting.user1.nil? %>
                      <li> <%= User.find(@meeting.user1).first %> </li>
                    <% end %>
                    <% if !@meeting.user2.nil? %>
                      <li> <%= User.find(@meeting.user2).first %> </li>
                    <% end %>
                    <% if !@meeting.user3.nil? %>
                      <li> <%= User.find(@meeting.user3).first %> </li>
                    <% end %>
                  </ul>
              </div>
            <div class="border-bottom pt-2">
              <h3>Tags:</h3>
              <ul>
                <% if @json_from_file != 0 %>
                  <% for i in hash.keywords do %>
                        <li> <%= i %> </li>
                  <% end %>
                <% end %>
              </ul>
            </div>
            <div class="pt-2" style="margin:0 0 0 40px;">
              <%= link_to 'Back', meetings_path, class:"btn btn-outline-secondary btn-md" %>
            </div>
            <!-- <table class="table w-auto table-borderless mb-0 span2" style="margin:0 0 0 20px;">
              <tr class="row">
                <td><%= link_to 'Edit', edit_meeting_path(@meeting), class:"btn btn-outline-secondary btn-md" %> </td>
                <td><%= link_to 'Back', meetings_path, class:"btn btn-outline-secondary btn-md" %> </td>
              </tr>
            </table> -->
            <!-- </div> -->
          </div>
        </div>

      </div>

      <div class="col" style="margin: 0 0 0 5px">

        <% if @json_from_file != 0 %>
            <% participants = [] %>
            <!-- Summary card -->
            <div class="card shadow border-left-success mb-4 scroll">
                <div class="card-header py-2">
                   <h4 class="m-0 ">Summary</h4>
                </div>
                <div class="card-body">
                    <% temp = 0 %>
                    <% p = 0 %>
                    <% string_s = '' %>
                    <% for i in hash.summary %>
                        <% if temp == 0 %>
                          <% string_s = i[1][0...-1] %>
                          <% p = i[0] %>
                          <% temp = temp+1 %>
                        <% else %>
                          <% if p == i[0] %>
                            <% string_s = string_s+ ' ' + i[1][0...-1] %>
                            <% if temp == hash.summary.length-1 %>
                              <p> <strong><%= p %></strong>: <%=string_s.capitalize()%></p>
                              <% if (participants.include? p.to_s())== false  %>
                                <% participants.append(p) %>
                              <%end%>
                            <% end %>
                          <% else %>
                            <p> <strong><%= p %></strong>: <%=string_s.capitalize()%></p>
                            <% if (participants.include? p.to_s()) == false %>
                              <% participants.append(p) %>
                            <%end%>
                            <% string_s = i[1][0...-1] %>
                            <% p = i[0] %>
                          <% end %>
                          <% temp = temp+1 %>
                        <% end %>

                    <% end %>

                  </div>
              </div>

              <!-- Question card -->
              <div class="row">
                <div class="col-lg-4 col-lg-4">
                  <div class="card border-left-success shadow mb-4">
                      <div class="card-header py-2">
                         <h4 class="m-2 ">Speaking Percentages</h4>
                      </div>
                      <div class="card-body">
                        <div class="chart-area">
                          <canvas id="speaker_chart"></canvas>
                        </div>
                    </div>
                  </div>
                </div>
                <% spoken_data = [] %>
                <% spoken_participants = [] %>
                <% for entry in hash.total_time_spoken %>
                 <% spoken_data.push(entry[1]) %>
                 <% spoken_participants.push(entry[0]) %>
                <% end %>
                <div class="col-lg-4 col-lg-4">
                  <div class="card border-left-success shadow mb-4">
                    <div class="card-header py-2">
                       <h4 class="m-2 ">Action Items Frequency</h4>
                    </div>
                      <div class="card-body">
                        <div class="chart-area">
                          <canvas id="action_chart"></canvas>
                        </div>
                    </div>
                  </div>
                </div>
                <div class="col-lg-4 col-lg-4">
                  <div class="card border-left-success shadow mb-4">
                    <div class="card-header py-2">
                       <h4 class="m-2 ">Interruptions</h4>
                    </div>
                      <div class="card-body">
                      <div class="chart-area">
                        <canvas id="interruption_chart"></canvas>
                      </div>
                    </div>
                  </div>
                </div>
             </div>

            <!-- Action Items card -->
             <% action_counter = {} %>
             <div class="row">
               <div class="col-xl-6 col-lg-4 mb-4">
                 <div class="card border-left-primary shadow h-100">
                   <div class="card-header py-2">
                      <h4 class="m-0 ">Action Items</h4>
                   </div>
                     <div class="card-body">
                       <% if hash.action_items.length != 0 %>
                         <% for i in hash.action_items %>
                           <% if action_counter.include? i[0] %>
                             <% action_counter[i[0]] += 1 %>
                           <% else %>
                             <% action_counter[i[0]] = 1 %>
                           <% end %>
                           <p class="pb-2 border-bottom border-gray">
                             <strong class="d-block"><%= i[0] %></strong><%= i[1][0...-1].capitalize()%> </p>

                         <% end %>
                       <% else %>
                         <p> No action items were said during the meeting. </p>
                       <% end %>
                   </div>
                 </div>
               </div>
               <% action_data = [] %>
               <% for i in participants %>
                  <% if action_counter.key?(i) == true %>
                    <% action_data.push(action_counter[i]) %>
                  <% else %>
                    <% action_data.push(0) %>
                  <% end %>
               <% end %>
               <div class="col-xl-6 col-lg-4 mb-4">
                 <div class="card border-left-primary shadow h-100">
                   <div class="card-header py-2">
                      <h4 class="m-0 ">Questions</h4>
                   </div>
                     <div class="card-body">
                      <% if hash.questions.length != 0 %>
                        <% for i in hash.questions %>
                        <p class="pb-2 border-bottom border-gray">
                          <strong class="d-block"><%= i[0] %></strong><%= i[1].capitalize()%> </p>
                        <% end %>
                      <% else %>
                        <p> No questions were asked during the meeting. </p>
                      <% end %>
                      </div>
                 </div>
                </div>
             </div>

            <% hesitation_counter = {} %>
            <% if hash.hesitation_analytics.length != 0 %>
              <% for i in hash.hesitation_analytics %>
                <% hesitation_counter[i[0]] = i[1] %>
              <% end %>
            <% else %>
              <p> None </p>
            <% end %>

            <% hesitation_array = [] %>
            <% for i in participants %>
              <% hesitation_array.append(hesitation_counter[i])%>
            <% end %>

            <% interruption_counter = {} %>
            <% if hash.interruption.to_s.length != 0 %>
              <% for i in hash.interruption %>
                <% interruption_counter[i[0]] = i[1] %>
              <% end %>
            <% else %>
              <p> None </p>
            <% end %>

            <% interruption_array = [] %>
            <% if hash.interruption.to_s.length != 0 %>
              <% for i in participants %>
                <% if interruption_counter.key?(i) == true %>
                  <% interruption_array.append(interruption_counter[i])%>
                <% else %>
                  <% interruption_array.append(0)%>
                <% end %>
              <% end %>
            <% end %>
            <% if interruption_array.length == 0 %>
              <%interruption_array.append(0)%>
            <% end %>

            <% if interruption_array.length > 0%>
              <% max_number = (interruption_array[0]+1)*2 %>
            <% else %>
              <% max_number = 0%>
            <% end %>
            <!-- Transcription card -->
            <div class="card shadow mb-4 scroll overflow-auto">
              <div class="card-header py-2">
                 <h4 class="m-0 ">Transcription</h4>
              </div>
                <div class="card-body">
                  <% temp1 = 0 %>
                  <% p1 = '' %>
                  <% string1 = '' %>
                  <% time1 = 0 %>
                  <% time2 = 0 %>
                  <% for i in hash.raw %>
                      <% if temp1 == 0 %>
                        <% string1 = i[1] %>
                        <% p1 = i[0] %>
                        <% temp1 = temp1+1 %>
                        <% time1 = i[2] %>
                        <% time2 = i[3] %>
                      <% else %>
                        <% if p1 == i[0] %>
                          <% string1 = string1+i[1] %>
                          <% time2 = i[3] %>
                          <% if temp1 == hash.raw.length-1 %>
                            <p><strong><%=p1%></strong> (<%= time1 %>, <%= time2 %>): <%=string1.capitalize()%></p>
                            <% string1 = '' %>
                          <% end %>
                        <% else %>
                          <p><strong><%=p1%> </strong>(<%= time1 %>, <%= time2 %>): <%=string1.capitalize()%></p>
                          <% string1 = '' %>
                          <% string1 = i[1] %>
                          <% p1 = i[0] %>
                          <% time1 = i[2] %>
                          <% time2 = i[3] %>
                        <% end %>
                        <% temp1 = temp1+1 %>
                      <% end %>

                  <% end %>
                </div>
            </div>
        <% end %>
      </div>
    </div>
  </div>
</body>
<% else %>
<div class="container">
  <div class="row justify-content-center">
    <!-- <div class="col-sm-9 col-md-7 col-lg-5 mx-auto"> -->
      <div class="card shadow my-2">
        <div class="card-body text-center">
          <h1 class="card-title text-center">Upload Meeting Files</h1>
          <p>
          <% for file in @meeting.file.attachments do %>
                 <%= file.filename.to_s() %> <br />
          <% end %>
          </p>
          <%= render 'upload_form', meeting: @meeting %>
          <%= button_to 'Analyze Meeting', meetings_analyze_path, method: :post, params: {id: @meeting.id}, class:"btn btn-outline-secondary"%>
        </div>
      </div>
    <!-- </div> -->
  </div>
</div>
<% end %>
<!-- Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
<script type="text/javascript">

    var participants = <%=raw participants%>;
    //Speakers Percentage Chart
    var chart1 ={
         type: 'doughnut',
         data: {
           datasets: [{
             data: <%= raw spoken_data %>,
             backgroundColor: [
             // 'rgba(255, 99, 132, 1)',
             // 'rgba(54, 162, 235, 1)',
             // 'rgba(255, 206, 86, 1)',
             // 'rgba(75, 192, 192, 1)',
             // 'rgba(153, 102, 255, 1)',
             // 'rgba(255, 159, 64, 1)'

             // 'rgba(67,215,217,1)',
             'rgba(255,71,145,1)',
             'rgba(0,190,255,1)',
             'rgba(179,141,251, 1)',
             'rgba(106,169,255,1)',
             'rgba(67,215,217,1)'
             ],
             datalabels: {
						   anchor: 'center',
               align: 'center',
             }
           }],
           labels: participants
         },
         options: {
           maintainAspectRatio: false,
           legend: {
             position: 'right',
             labels: {
               fontSize:15,
               usePointStyle: true
             },
              position: 'right',
           },
           animation: {
             animateScale: true,
             animateRotate: true
           },
           plugins:{
             datalabels:{
               color:"white",
               display: true,
               // display: function(chart1) {
               //  var dataset = chart1.dataset;
  							// var value = dataset.data[chart1.dataIndex];
  							// return value*100;
    					 // },
               font: {
    							weight:'bold',
    						},
                formatter: function(value, context) {
                    return Math.round(value*100) + '%';
                }

               // formatter:Math.multiple(100),
             }
           }
         }
     };
     //Action data chart
    var chart2 = {
      type: 'doughnut',
      data: {
        datasets: [{
          data: <%= raw action_data %>,
          backgroundColor: [
            // 'rgba(255, 99, 132, 1)',
            // 'rgba(54, 162, 235, 1)',
            // 'rgba(255, 206, 86, 1)',
            // 'rgba(75, 192, 192, 1)',
            // 'rgba(153, 102, 255, 1)',
            // 'rgba(255, 159, 64, 1)'
            'rgba(255,71,145,1)',
            'rgba(0,190,255,1)',
            'rgba(179,141,251, 1)',
            'rgba(106,169,255,1)',
            'rgba(67,215,217,1)'
          ],
          label: 'Dataset 1'
        }],
        labels: participants
      },
      options: {
        maintainAspectRatio: false,
        legend: {
          position: 'right',
          labels: {
            fontSize:15,
            usePointStyle: true
          }
        },
        animation: {
          animateScale: true,
          animateRotate: true
        },
        plugins:{
          datalabels:{
            color:"white",
            display: function(context) {
              return context.dataset.data[context.dataIndex] !== 0;
            },
            font: {
               weight:'bold',
               fontSize:15,
             },

            // formatter:Math.multiple(100),
          }
        }
      }
    };
  var chart3 = {
      type: 'bar',
      data: {
          labels: participants,
          datasets: [{
              label: '# of Interruptions',
              data: <%=raw interruption_array%>,
              backgroundColor: [
                  // 'rgba(255, 99, 132, 0.2)',
                  // 'rgba(54, 162, 235, 0.2)',
                  // 'rgba(255, 206, 86, 0.2)',
                  // 'rgba(75, 192, 192, 0.2)',
                  // 'rgba(153, 102, 255, 0.2)',
                  // 'rgba(255, 159, 64, 0.2)'
                  'rgba(255,71,145,1)',
                  'rgba(0,190,255,1)',
                  'rgba(179,141,251, 1)',
                  'rgba(106,169,255,1)',
                  'rgba(67,215,217,1)'
              ],
              borderColor: [
                  // 'rgba(255, 99, 132, 1)',
                  // 'rgba(54, 162, 235, 1)',
                  // 'rgba(255, 206, 86, 1)',
                  // 'rgba(75, 192, 192, 1)',
                  // 'rgba(153, 102, 255, 1)',
                  // 'rgba(255, 159, 64, 1)'
                  'rgba(255,71,145,1)',
                  'rgba(0,190,255,1)',
                  'rgba(179,141,251, 1)',
                  'rgba(106,169,255,1)',
                  'rgba(67,215,217,1)'
              ],
              borderWidth: 1
          }]
      },
      options: {
          maintainAspectRatio: false,
          legend: {
            display: true,
            labels:{
              fontSize:15,
            }
          },
          max: 5,
          scales: {
              xAxes:[{
                ticks:{
                  fontSize:15
                }
              }],
              yAxes: [{
                  ticks: {
                      beginAtZero: true,
                      max: <%= raw max_number %>,
                      fontSize:15,
                      stepSize:1
                  }
              }],
            animation: {
              animateScale: true
            }
          },
          plugins:{
            datalabels:{
              color:"white",
              display: function(context) {
                return context.dataset.data[context.dataIndex] !== 0;
              },
              font: {
                 weight:'bold',
                 fontSize:15,
               },
              // formatter:Math.multiple(100),
            }
          }
      }
    };
    // Chart.types.Doughnut.extend({
    //     name: "chart1",
    //     showTooltip: function() {
    //         this.chart.ctx.save();
    //         Chart.types.Doughnut.prototype.showTooltip.apply(this, arguments);
    //         this.chart.ctx.restore();
    //     },
    //     draw: function() {
    //         Chart.types.Doughnut.prototype.draw.apply(this, arguments);
    //
    //         var width = this.chart.width,
    //             height = this.chart.height;
    //
    //         var fontSize = (height / 114).toFixed(2);
    //         this.chart.ctx.font = fontSize + "em Verdana";
    //         this.chart.ctx.textBaseline = "middle";
    //
    //         var text = "82%",
    //             textX = Math.round((width - this.chart.ctx.measureText(text).width) / 2),
    //             textY = height / 2;
    //
    //         this.chart.ctx.fillText(text, textX, textY);
    //     }
    // });
    setTimeout(() => {
      var ctx = document.getElementById('speaker_chart').getContext('2d');
      var ctx2 = document.getElementById('action_chart').getContext('2d');
      var ctx4 = document.getElementById('interruption_chart').getContext('2d');
      window.myLine = new Chart(ctx, chart1);
      window.myLine = new Chart(ctx2, chart2);
      window.myLine = new Chart(ctx4, chart3);
    }, 500);
</script>
